suppressMessages(library(readr))
suppressMessages(library(tidyr))
##Change to route of this r code/specified wd
route <- "C:\\Users\\win\\Documents\\GitHub\\Upload-stream-COVID"
setwd(route)
stateparse <- function(in_file, i) {
## This is the only line you would want to change other than the file name.
## Change "_1" to other numbers if there is more than one patch to upload
out_csv <-
paste("Apostle_", format(Sys.Date(), "%Y%m%d"), "_", i, ".csv", sep = "")
s <-
suppressMessages(read_delim(
in_file,
"\t",
escape_double = FALSE,
na = "empty",
trim_ws = TRUE
))
dat <- data.frame(matrix(NA, nrow = nrow(s)))
dat$`Facility Name` <- "Apostle Diagnostic"
dat$`Facility CLIA` <- "05D2191922"
dat$`Facility Street Address` <- "160 E Tasman Drive, STE 116"
dat$`Facility City` <- "San Jose"
dat$`Facility State` <- "CA"
dat$`Facitliy Zip` <- 95134
dat$`Facility Phone` <- 8889927678
for (i in 1:nrow(s)) {
dat$`Patient Identifier`[i] <-
strsplit(s$`Record name`, "/")[[i]][1]
}
dat$`Patient First Name` <- s$`First Name`
dat$`Patient Middle Initial` <-
toupper(substring(s$`Middle Name`, 1, 1))
dat$`Patient Last Name` <- s$`Last Name`
dat$`Patient Date of Birth` <- as.character(s$DOB)
for (i in 1:nrow(s)) {
dat$`Patient Date of Birth`[i] <-
paste(
strsplit(as.character(dat$`Patient Date of Birth`), "-")[[i]][1],
strsplit(as.character(dat$`Patient Date of Birth`), "-")[[i]][2],
strsplit(as.character(dat$`Patient Date of Birth`), "-")[[i]][3],
sep = ""
)
}
dat$`Patient Sex` <- s$Gender
dat$Race <- s$`Patient Race`
for (i in 1:nrow(s)) {
if (dat$Race[i] == "American Indian or Alaska Native")
{
dat$Race[i] = "1002-5"
}
else if (dat$Race[i] == "Asian")
{
dat$Race[i] = "2028-9"
}
else if (dat$Race[i] == "African American")
{
dat$Race[i] = "2054-5"
}
else if (dat$Race[i] == "European American")
{
dat$Race[i] = "2106-3"
}
else if (dat$Race[i] == "Hawaiian or Other Pacific Islander")
{
dat$Race[i] = "2076-8"
}
else
dat$Race[i] = "2131-1"
}
dat$Ethnicity <- substring(s$`Patient Ethnicity`, 1, 1)
for (i in 1:nrow(s)){
if (dat$Ethnicity[i]==""){
dat$Ethnicity[i]="U"
}
}
dat$`Language` <- "U"
dat$`Patient Street Address` <- s$Address
dat$`Patient City` <- s$City
dat$`Patient State` <- s$State
dat$`Patient Zip` <-
gsub("[[:punct:]]", "", substring(as.character(s$`Zip Code`), 1, 5))
##zip code to county
if (file.exists("uszips.csv") == FALSE) {
download.file(
"https://raw.githubusercontent.com/zhangrener/Upload-stream-COVID/main/uszips.csv",
"uszips.csv"
)
}
##county can be blank but the States need to be filled up.
ZipCodes <- suppressMessages(read_csv("uszips.csv"))
dat$`Patient County` <-
ZipCodes[match(substring(s$`Zip Code`, 1, 5), ZipCodes$zip),]$county_name
dat$`Patient Phone Number` <-
gsub("[[:punct:]]|[[:space:]]", "", s$Phone)
dat$`OK to Contact Patient` <- "N"
dat$`Provider First Name` <- "Charles"
dat$`Provider Last Name` <- "Strom"
dat$`Provider Facility Name` <- "Apostle Diagnostics"
##Provider info
dat$`Provider ID/NPI` <- 1316531510
dat$`Provider Street Address` <- "160 E Tasman Drive, STE 116"
dat$`Provider City` <- "San Jose"
dat$`Provider State` <- "CA"
dat$`Provider ZIP` <- 95134
dat$`Provider Phone Number` <- 8889927678
dat$`Specimen ID` <- s$Name
##time format
dat$`Specimen Collection Date` <- strsplit(s$Name, "-")[[1]][1]
dat$`Specimen Received Date` <- dat$`Specimen Collection Date`
for (i in 1:nrow(s)) {
dat$`Date Test Ordered`[i] <-
as.character(as.Date(s$`Collection Date Time*`[i]) - sample(1:14, 1))
}
a <- NULL
for (i in 1:nrow(s)) {
a[i] <-
paste(
strsplit(as.character(dat$`Date Test Ordered`), "-")[[i]][1],
strsplit(as.character(dat$`Date Test Ordered`), "-")[[i]][2],
strsplit(as.character(dat$`Date Test Ordered`), "-")[[i]][3],
sep = ""
)
}
dat$`Date Test Ordered` <- a
dat$`Result Date` <- dat$`Specimen Collection Date`
dat$`Date Reported` <- dat$`Result Date`
##
if (colnames(s[, 35]) == "covid-19*" |
colnames(s[, 39]) == "covid-19*") {
dat$`Specimen Type` <- 258500001
dat$`Specimen Site` <- "Nasopharynx"
dat$`Test Name` <- "SARS-CoV-2 RNA RT-PCR test for COVID-19"
dat$Result <- s$`covid-19*`
dat$`Accession Number` <- s$Number
dat$`Test Code` <- "94500-6"
dat$`Result Code` <-
ifelse(s$`covid-19*` == "Detected (Positive)", "260373001", "260415000")
dat$`Result Code`[which(s$`covid-19*` == "Inconclusive")] <-
"419984006"
}
if (colnames(s[, 35]) == "COVID-19 Antigen*") {
dat$`Specimen Type` <- 258500001
dat$`Specimen Site` <- "Nasopharynx"
dat$`Test Name` <- "COVID-19 Antigen Rapid Test"
dat$Result <- s$`COVID-19 Antigen*`
dat$`Accession Number` <- s$Number
dat$`Test Code` <- "94500-6"
dat$`Result Code` <-
ifelse(s$`COVID-19 Antigen*` == "Detected",
"260373001",
"260415000")
dat$`Result Code`[which(s$`COVID-19 Antigen*` == "Inconclusive")] <-
"419984006"
}
if (colnames(s[, 37]) == "igm-n-comment*") {
dat$`Specimen Type` <- 788707000
dat$`Specimen Site` <- "Medium cubital vein"
dat$`Test Name` <- "SARS-CoV-2 Serum anti-N IgM Antibody Test"
dat$Result <- s$`IgM*`
dat$`Accession Number` <- s$Number
dat$`Test Code` <- "94500-6"
dat$`Result Code` <-
ifelse(s$`IgM*` == "Detected", "260373001", "260415000")
dat$`Result Code`[which(s$`IgM*` == "Inconclusive")] <-
"419984006"
}
if (ncol(s) >= 39 && colnames(s[, 39]) == "igm-s-comment*") {
dat$`Specimen Type` <- 788707000
dat$`Specimen Site` <- "Medium cubital vein"
dat$`Test Name` <- "SARS-CoV-2 Serum IgM Antibody Test"
dat$Result <- s$`IgM*`
dat$`Accession Number` <- s$Number
dat$`Test Code` <- "94500-6"
dat$`Result Code` <-
ifelse(s$`IgM*` == "Detected", "260373001", "260415000")
dat$`Result Code`[which(s$`IgM*` == "Inconclusive")] <-
"419984006"
}
dat$`Device Identifier` <- "QuantStudio 5 Real-Time PCR System"
dat$`Notes` <- " "
dat[, 1] <- NULL
dat[is.na(dat)] <- " "
if (colnames(s[, 35]) == "COVID-19 Antigen*") {
dat = dat[which(s$`COVID-19 Antigen*` == "Detected"), ]
}
if (nrow(dat) > 0 && ncol(dat) == 47) {
write.csv(dat, out_csv, row.names = FALSE)
return(out_csv)
}
else {
return(NULL)
}
}
#read all files in the working directory start with "grid"
filenames <- list.files(pattern = "grid*")
#i index the file_name, increment every time a result file is generated
i <- 0
output_list = c()
for (j in filenames) {
i = i + 1
k = stateparse(j, i)
output_list <- c(output_list , k)
if (is.null(k)) {
i = i - 1
}
}
print(paste(i, " file(s) is/are generated!"))
output_list
#install.packages("devtools")
#devtools::install_github("stenevang/sftp")
library(sftp)
sftp_con <-
sftp_connect(
server = 'ecgpe.healthtechnologygroup.com', #sftpvalidation.calsaphire.org
folder = "in/apostleprod/csv",
username = 'es00g4s', #APOSTLE-sftp
password = '2sYJ06zr' #YZ8OaLz6604$
)
for (i in output_list) {
sftp_upload(i, fromfolder = route, sftp_connection = sftp_con)
print(paste(i, " uploaded successfully!"))
}
print("All set! Have a good rest of the day!")
